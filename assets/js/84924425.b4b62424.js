"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8033],{5680:(n,e,t)=>{t.d(e,{xA:()=>p,yg:()=>y});var a=t(6540);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function d(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var o=a.createContext({}),u=function(n){var e=a.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=u(n.components);return a.createElement(o.Provider,{value:e},n.children)},c="mdxType",g={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,l=n.originalType,o=n.parentName,p=d(n,["components","mdxType","originalType","parentName"]),c=u(t),s=r,y=c["".concat(o,".").concat(s)]||c[s]||g[s]||l;return t?a.createElement(y,i(i({ref:e},p),{},{components:t})):a.createElement(y,i({ref:e},p))}));function y(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var l=t.length,i=new Array(l);i[0]=s;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=n,d[c]="string"==typeof n?n:r,i[1]=d;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},9915:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var a=t(8168),r=(t(6540),t(5680));const l={},i="std::thread\u5165\u95e8",d={unversionedId:"cpp/learn-std-thread",id:"cpp/learn-std-thread",title:"std::thread\u5165\u95e8",description:"\u53c2\u8003",source:"@site/docs/cpp/learn-std-thread.md",sourceDirName:"cpp",slug:"/cpp/learn-std-thread",permalink:"/cpp/learn-std-thread",draft:!1,editUrl:"https://github.com/chunleili/chunleili.github.io/tree/master/docs/cpp/learn-std-thread.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C++\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u5185\u5b58\u6d88\u8017",permalink:"/cpp/getRAM"},next:{title:"\u73b0\u4ee3cpp\u6559\u7a0b\u7b14\u8bb0",permalink:"/cpp/mordenCppTut"}},o={},u=[{value:"\u7b80\u4ecb",id:"\u7b80\u4ecb",level:2},{value:"hello world",id:"hello-world",level:2},{value:"\u6784\u9020\u51fd\u6570",id:"\u6784\u9020\u51fd\u6570",level:2},{value:"\u5047\u5982\u7528lambda(\u6211\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\uff0c\u7b80\u6d01\u5e72\u51c0\uff09",id:"\u5047\u5982\u7528lambda\u6211\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u7b80\u6d01\u5e72\u51c0",level:3},{value:"\u5982\u679c\u7528functor\uff08\u51fd\u6570\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u91cd\u8f7d\u4e86operator()\u7684\u7c7b\uff09",id:"\u5982\u679c\u7528functor\u51fd\u6570\u5bf9\u8c61\u4e5f\u5c31\u662f\u91cd\u8f7d\u4e86operator\u7684\u7c7b",level:3},{value:"\u5982\u679c\u7528\u6210\u5458\u51fd\u6570\u65b9\u5f0f",id:"\u5982\u679c\u7528\u6210\u5458\u51fd\u6570\u65b9\u5f0f",level:3},{value:"detach",id:"detach",level:2},{value:"\u4e00\u4e2a\u6709BUG\u7684\u7a0b\u5e8f",id:"\u4e00\u4e2a\u6709bug\u7684\u7a0b\u5e8f",level:3},{value:"\u53e6\u4e00\u4e2a\u6709BUG\u7684\u7a0b\u5e8f",id:"\u53e6\u4e00\u4e2a\u6709bug\u7684\u7a0b\u5e8f",level:3},{value:"\u5373\u4f7f\u662f\u4f20\u9012\u5f15\u7528\u4e5f\u4f1a\u53d8\u6210\u62f7\u8d1d\u4f20\u503c",id:"\u5373\u4f7f\u662f\u4f20\u9012\u5f15\u7528\u4e5f\u4f1a\u53d8\u6210\u62f7\u8d1d\u4f20\u503c",level:2},{value:"\u83b7\u53d6\u7ebf\u7a0b\u7684id",id:"\u83b7\u53d6\u7ebf\u7a0b\u7684id",level:2},{value:"TODO",id:"todo",level:2}],p={toc:u},c="wrapper";function g(n){let{components:e,...t}=n;return(0,r.yg)(c,(0,a.A)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"stdthread\u5165\u95e8"},"std::thread\u5165\u95e8"),(0,r.yg)("p",null,"\u53c2\u8003\n",(0,r.yg)("a",{parentName:"p",href:"https://immortalqx.github.io/2021/12/04/cpp-notes-3/"},"https://immortalqx.github.io/2021/12/04/cpp-notes-3/")),(0,r.yg)("p",null,"\u5bf9\u5e94\u4ee3\u7801\n",(0,r.yg)("a",{parentName:"p",href:"https://github.com/chunleili/learnStdThread"},"https://github.com/chunleili/learnStdThread")),(0,r.yg)("h2",{id:"\u7b80\u4ecb"},"\u7b80\u4ecb"),(0,r.yg)("p",null,"thread\u662fC++11\u4e4b\u540e\u7684\u4e00\u4e2a\u5e76\u884cSTL\u5e93\u3002\u7531\u4e8e\u662fSTL\u7684\u4e00\u90e8\u5206\uff0c\u597d\u5904\u662f\u8de8\u5e73\u53f0\u3002\u4e0e\u4e4b\u76f8\u6bd4\uff0cpthread.h\u53ea\u652f\u6301linux\uff0c\u56e0\u6b64\u5efa\u8bae\u7528std::thread\u6765\u4ee3\u66ffpthread\u3002"),(0,r.yg)("p",null,"thread\u65e0\u975e\u5c31\u662f\u4e00\u4e2aC++\u7c7b\u3002\u6240\u4ee5\u521b\u5efa\u7ebf\u7a0b\u5c31\u662f\u7c7b\u7684\u5b9e\u4f8b\u5316\uff0c\u800c\u7ed3\u675f\u5219\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\u3002"),(0,r.yg)("p",null,"thread\u7684\u6784\u9020\u51fd\u6570\u5177\u6709\u53d8\u957f\u53c2\u6570\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u7684\u662f\u4e2a\u51fd\u6570\u6307\u9488/\u51fd\u6570\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u548c\u4e4b\u540e\u7684\u53c2\u6570\u5c31\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u3002\u975e\u5e38\u7b80\u5355\u3002"),(0,r.yg)("p",null,"\u5176\u4e2d\u6709\u4e24\u4e2a\u6210\u5458\u51fd\u6570\u6700\u4e3a\u91cd\u8981\uff1ajoin()\u548cdetach()\u3002"),(0,r.yg)("p",null,"\u7b80\u5355\u6765\u8bf4join\u5c31\u662f\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7684\u5b8c\u6210\uff0c\u800cdetach\u5c31\u662f\u8ba9\u5b50\u7ebf\u7a0b\u653e\u98de\u81ea\u6211\u3002"),(0,r.yg)("h2",{id:"hello-world"},"hello world"),(0,r.yg)("p",null,"\u4e0b\u9762\u662f\u4e2a\u793a\u4f8b\u7a0b\u5e8f"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <thread>\n\nusing namespace std;\n\nvoid output(int i)\n{\n    cout << i << endl;\n}\n\nint main()\n{\n    \n    for (uint8_t i = 0; i < 4; i++)\n    {\n        thread t(output, i);\n        t.join();   \n    }\n        \n    return 0;\n}\n")),(0,r.yg)("p",null,"\u8f93\u51fa"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"0\n1\n2\n3\n")),(0,r.yg)("p",null,"\u89e3\u91ca\u4e0b:\n",(0,r.yg)("inlineCode",{parentName:"p"},"thread t(output, i);"),"\u662f\u521b\u5efa\u7ebf\u7a0b\u3002\u6bcf\u6b21\u5faa\u73af\u90fd\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u3002"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"t.join();"),"\t\u7136\u540e\u5229\u7528join\u7b49\u5f85\u8be5\u7ebf\u7a0b\u7684\u6267\u884c\u5b8c\u6bd5\u3002"),(0,r.yg)("p",null,"\u5728\u8fd9\u91cc\u6267\u884c\u8be5\u7ebf\u7a0b\u5c31\u662f\u6253\u5370\u4e00\u4e0bi\u3002"),(0,r.yg)("p",null,"\u5728\u8fd9\u6b21\u5faa\u73af\u5b8c\u6bd5\u540e\uff0c\u7531\u4e8e\u5bf9\u8c61t\u662f\u5728\u8be5\u4f5c\u7528\u57df\u5185\u5b9e\u4f8b\u5316\u7684\uff0c\u56e0\u6b64\u4f5c\u7528\u57df\u7ed3\u675f\u65f6\u81ea\u52a8\u6790\u6784\u3002"),(0,r.yg)("p",null,"\u7136\u540e\u518d\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8c61\uff0c\u4e5f\u662ft\u3002\u518d\u6267\u884c\u3002\u7136\u540e\u7b49\u5f85\u3002\u6700\u540e\u6790\u6784\u3002\u5982\u6b64\u5f80\u590d4\u6b21\u3002"),(0,r.yg)("h2",{id:"\u6784\u9020\u51fd\u6570"},"\u6784\u9020\u51fd\u6570"),(0,r.yg)("p",null,"\u4e0b\u9762\u6211\u4eec\u8be6\u89e3\u4e00\u4e0b\u6784\u9020\u51fd\u6570"),(0,r.yg)("p",null,"\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u51fd\u6570\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u666e\u901a\u51fd\u6570\u3001\u6210\u5458\u51fd\u6570\uff0cfunctor\uff0clambda\u7b49\u3002"),(0,r.yg)("h3",{id:"\u5047\u5982\u7528lambda\u6211\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u7b80\u6d01\u5e72\u51c0"},"\u5047\u5982\u7528lambda(\u6211\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\uff0c\u7b80\u6d01\u5e72\u51c0\uff09"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <thread>\n\nusing namespace std;\n\nint main()\n{\n    \n    for (int i = 0; i < 4; i++)\n    {\n        thread t([i](){\n             cout << i << endl; \n        });\n        t.join();   \n    }\n        \n    return 0;\n}\n")),(0,r.yg)("h3",{id:"\u5982\u679c\u7528functor\u51fd\u6570\u5bf9\u8c61\u4e5f\u5c31\u662f\u91cd\u8f7d\u4e86operator\u7684\u7c7b"},"\u5982\u679c\u7528functor\uff08\u51fd\u6570\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u91cd\u8f7d\u4e86operator()\u7684\u7c7b\uff09"),(0,r.yg)("p",null,"\u8fd9\u79cd\u65b9\u5f0f\u8981\u6ce8\u610f\uff1a\u4e0d\u80fd\u4f7f\u7528",(0,r.yg)("inlineCode",{parentName:"p"},"thread t(Task(), i);"),"\u3002\u5c3d\u7ba1\u8fd9\u4e2a\u6709\u53ef\u80fd\u4e0d\u51faBUG\uff0c\u4f46\u662f\u4e5f\u6709\u53ef\u80fd\u4f1a\u51faBUG\u3002\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u8ba4\u4e3a\u4f60\u5728\u8fdb\u884c\u51fd\u6570\u58f0\u660e\u3002\u5982\u679c\u4f60\u975e\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u533f\u540d\u53d8\u91cf\uff0c\u90a3\u4e48\u8bf7\u7528",(0,r.yg)("inlineCode",{parentName:"p"},"{}")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <thread>\n\nusing namespace std;\n\nclass Task\n{\npublic:\n    void operator()(int i)\n    {\n        cout << i << endl;\n    }\n};\n\n\nint main()\n{\n    for (int i = 0; i < 4; i++)\n    {\n        Task task;\n        thread t(task, i);\n        //do not use this, because it may be viewed as a function declaration\n        //thread t(Task(), i);\n        //If you want to use this, you should use initializer_list\n        //thread t{(Task()), i};\n        t.join();   \n    }\n        \n    return 0;\n}\n")),(0,r.yg)("h3",{id:"\u5982\u679c\u7528\u6210\u5458\u51fd\u6570\u65b9\u5f0f"},"\u5982\u679c\u7528\u6210\u5458\u51fd\u6570\u65b9\u5f0f"),(0,r.yg)("p",null,"\u8fd9\u7c7b\u65b9\u5f0f\u6700\u9ebb\u70e6\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fd8\u9700\u8981\u4f20\u5165\u6240\u5bf9\u5e94\u7684\u5bf9\u8c61\u7684\u6307\u9488\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <thread>\n\nusing namespace std;\n\nclass Task\n{\npublic:\n    void do_work(int i)\n    {\n        cout << i << endl;\n    }\n};\n\n\nint main()\n{\n    cout<<"member func"<<endl;\n    for (int i = 0; i < 4; i++)\n    {\n        Task task;\n        thread t(&Task::do_work, &task, i);\n        t.join();   \n    }\n        \n    return 0;\n}\n')),(0,r.yg)("h2",{id:"detach"},"detach"),(0,r.yg)("p",null,"\u4e0a\u9762\u8bf4\u7684\u90fd\u662fjoin\u7684\u4f8b\u5b50\u3002\u56e0\u4e3ajoin\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7684\u6267\u884c\u5b8c\u6bd5\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u4e71\u5e8f\u7684BUG\u3002\u4f46\u662f\u5982\u679cdetach\uff0c\u90a3\u4e48\u5b50\u7ebf\u7a0b\u5c31\u662f\u653e\u98de\u81ea\u6211\uff0c\u4e3b\u7ebf\u7a0b\u4e5f\u4e0d\u4f1a\u7b49\u5f85\u5b50\u7ebf\u7a0b\uff0c\u5bfc\u81f4\u8c01\u4e5f\u4e0d\u77e5\u9053\u54ea\u4e2a\u5b50\u7ebf\u7a0b\u5148\u6267\u884c\u5b8c\u6bd5\u3002"),(0,r.yg)("h3",{id:"\u4e00\u4e2a\u6709bug\u7684\u7a0b\u5e8f"},"\u4e00\u4e2a\u6709BUG\u7684\u7a0b\u5e8f"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <thread>\n\nusing namespace std;\n\nvoid output(int i)\n{\n    cout << i << endl;\n}\n\nint main()\n{\n    cout<<"detach thread\\n";\n    for (uint8_t i = 0; i < 4; i++)\n    {\n        thread t(output, i);\n        t.detach(); \n    }\n    \n    getchar();\n\n    return 0;\n}\n')),(0,r.yg)("p",null,"\u8f93\u51fa"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"detach thread\n02\n3\n1\n")),(0,r.yg)("p",null,"\u8fd9\u663e\u7136\u662f\u4e2a\u6709BUG\u7684\u7a0b\u5e8f\u3002\u56e0\u4e3a\u5b50\u7ebf\u7a0b\u653e\u98de\u81ea\u6211\u4e4b\u540e\uff0c\u4f60\u6839\u672c\u65e0\u6cd5\u9884\u6d4b\u54ea\u4e2a\u5148\u7ed3\u675f\u3002\u4f60\u751a\u81f3\u4e0d\u80fd\u4fdd\u8bc1\u4e3b\u7ebf\u7a0bmain\u51fd\u6570\u6700\u540ereturn 0\u3002\u56e0\u4e3a\u6709\u53ef\u80fd\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4e86\uff0c\u5b50\u7ebf\u7a0b\u8fd8\u5728\u8fd0\u884c\u7740\u5462\u3002"),(0,r.yg)("p",null,"\u4fe1\u4e0d\u4fe1\u7531\u4f60\uff1a\u5982\u679c\u4f60\u4e0d\u52a0\u4e0a",(0,r.yg)("inlineCode",{parentName:"p"},"getchar();")," \u4f60\u751a\u81f3\u53ef\u80fd\u4ec0\u4e48\u90fd\u6253\u5370\u4e0d\u51fa\u6765\u3002\u56e0\u4e3a\u4e3b\u7ebf\u7a0b\u5148\u7ed3\u675f\u4e86\uff0c\u5b50\u7ebf\u7a0b\u8fd8\u6ca1\u7ed3\u675f\u5462\u3002"),(0,r.yg)("h3",{id:"\u53e6\u4e00\u4e2a\u6709bug\u7684\u7a0b\u5e8f"},"\u53e6\u4e00\u4e2a\u6709BUG\u7684\u7a0b\u5e8f"),(0,r.yg)("p",null,"detach\u53e6\u5916\u4e00\u4e2a\u9519\u8bef\u662f\u5bb9\u6613\u5bfc\u81f4\u60ac\u7a7a\u6307\u9488\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <thread>\n\nusing namespace std;\n\nint main()\n{\n\n    auto fn = [](const int *a)\n    {\n        for (int i = 0; i < 10; i++)\n        {\n            cout << *a << endl;\n        }\n    };\n\n    cout << "detach thread another bug\\n";\n    [fn]\n    {\n        int a = 1010;\n        thread t(fn, &a);\n        t.detach();\n    }();\n}\n')),(0,r.yg)("p",null,"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ca\u7684\u5730\u5740\u88ab\u4f20\u7ed9\u5b50\u7ebf\u7a0b\u7684fn\u51fd\u6570\u3002\u4f46\u662f\u7531\u4e8e\u662fdetach\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u9700\u8981\u7b49\u5f85\u5b50\u7ebf\u7a0b\u3002\u8fd9\u5c31\u5bfc\u81f4\u5f88\u53ef\u80fd\u4e3b\u7ebf\u7a0b\u5df2\u7ecf\u6267\u884c\u5b8c\u6bd5\uff0c\u5e76\u4e14\u9500\u6bc1\u4e86a\u53d8\u91cf\uff0c\u5bfc\u81f4\u8fd9\u4e2a\u6307\u9488\u662f\u4e2a\u60ac\u7a7a\u7684\u6307\u9488\u3002"),(0,r.yg)("p",null,"\u6b63\u786e\u7684\u6539\u8fdb\u65b9\u5f0f\u662f\u628a\u4f20\u9012\u6307\u9488\u6539\u6210\u4f20\u503c\u3002"),(0,r.yg)("p",null,"\u56e0\u6b64\u5728\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u4e2d\uff0c\u901a\u5e38\u90fd\u91c7\u7528\u4f20\u503c\u800c\u975e\u4f20\u5740\u3002"),(0,r.yg)("h2",{id:"\u5373\u4f7f\u662f\u4f20\u9012\u5f15\u7528\u4e5f\u4f1a\u53d8\u6210\u62f7\u8d1d\u4f20\u503c"},"\u5373\u4f7f\u662f\u4f20\u9012\u5f15\u7528\u4e5f\u4f1a\u53d8\u6210\u62f7\u8d1d\u4f20\u503c"),(0,r.yg)("p",null,"\u4e3a\u4e86\u9632\u6b62\u4e0a\u8ff0\u9519\u8bef\uff0c\u6709\u65f6\u5373\u4f7f\u662f\u4f20\u9012\u5f15\u7528\uff0c\u4e5f\u4f1a\u53d8\u6210\u62f7\u8d1d\u3002\uff08VS\u662f\u5982\u6b64\uff0capple-clang\u5219\u76f4\u63a5\u62a5\u9519\uff09"),(0,r.yg)("p",null,"\u4f8b\u5982"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <thread>\n\nusing namespace std;\n\nclass Node\n{\npublic:\n    int a = 1;\n    int b = 2;\n};\n\nvoid func(Node &node)//will become copy even if we pass by reference\n{\n    node.a = 10;\n    node.b = 20;\n}\n\nint main()\n{\n    Node node;\n\n    thread t(func, node);\n    t.join();\n\n    cout << node.a << endl ;\n    cout << node.b << endl ;\n}\n")),(0,r.yg)("p",null,"output"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"1\n2\n")),(0,r.yg)("p",null,"\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5373\u4f7f\u6211\u4eec\u6307\u5b9a\u4e86\u4f20\u9012\u5f15\u7528\uff0c\u4e5f\u4f1a\u53d8\u6210\u62f7\u8d1d\u3002\u6240\u4ee5func\u6839\u672c\u6ca1\u6539\u53d8node\u539f\u6709\u7684\u503c\u3002\u6240\u4ee5\u6700\u540e\u6253\u5370\u51fa\u6765\u8fd8\u662f1 2\u3002"),(0,r.yg)("p",null,"apple-clang\u5219\u76f4\u63a5\u4f1a\u62a5\u9519\uff1a",(0,r.yg)("inlineCode",{parentName:"p"},"error: attempt to use a deleted function")),(0,r.yg)("p",null,"\u5c06\u5f15\u7528\u6539\u4e3a\u4f20\u503c\u5219\u4f1a\u4fee\u6b63BUG."),(0,r.yg)("h2",{id:"\u83b7\u53d6\u7ebf\u7a0b\u7684id"},"\u83b7\u53d6\u7ebf\u7a0b\u7684id"),(0,r.yg)("p",null,"\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6id"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"\u4ece\u5b50\u7ebf\u7a0b\u5185\u83b7\u53d6 ",(0,r.yg)("inlineCode",{parentName:"li"},"this_thread::get_id()")),(0,r.yg)("li",{parentName:"ol"},"\u4ece\u5916\u90e8\u4e3b\u7ebf\u7a0b\u83b7\u53d6 ",(0,r.yg)("inlineCode",{parentName:"li"},"t.get_id()"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'#include <iostream>\n#include <thread>\n\nusing namespace std;\n\nvoid func()\n{\n    cout << "In func thread id:"<<this_thread::get_id() << endl;\n}\n\nint main()\n{\n    for (size_t i = 0; i < 4; i++)\n    {\n        thread t(func);\n\n        cout << "In main thread id:"<<t.get_id() << endl;\n\n        t.join();\n\n        cout<<"-----------------"<<endl;\n    }\n}\n')),(0,r.yg)("p",null,"\u8f93\u51fa"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"In main thread id:27424\nIn func thread id:27424\n-----------------\nIn main thread id:20068\nIn func thread id:20068\n-----------------\nIn main thread id:19404\nIn func thread id:19404\n-----------------\nIn main thread id:21680\nIn func thread id:21680\n-----------------\n")),(0,r.yg)("p",null,"\u5728apple-clang\u4e2d\u5219\u4f20\u9012\u7684\u662f\u4e00\u4e2a16\u8fdb\u5236\u6570\u5b57\u3002"),(0,r.yg)("h2",{id:"todo"},"TODO"),(0,r.yg)("p",null,"mutex\ncondition_variable"))}g.isMDXComponent=!0}}]);