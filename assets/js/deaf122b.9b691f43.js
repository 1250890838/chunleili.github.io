"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2342],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=p(r),f=i,m=l["".concat(u,".").concat(f)]||l[f]||d[f]||a;return r?n.createElement(m,o(o({ref:t},s),{},{components:r})):n.createElement(m,o({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[l]="string"==typeof e?e:i,o[1]=c;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3789:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={},o="\u4e3ataichi\u7a0b\u5e8f\u6682\u505c\u548creset\u4ee5\u4fbf\u4e8e\u8c03\u8bd5",c={unversionedId:"taichi/taichi-debug",id:"taichi/taichi-debug",title:"\u4e3ataichi\u7a0b\u5e8f\u6682\u505c\u548creset\u4ee5\u4fbf\u4e8e\u8c03\u8bd5",description:"\u5148\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cfpaused\uff0c\u76f8\u5f53\u4e8eFLAG",source:"@site/docs/taichi/taichi-debug.md",sourceDirName:"taichi",slug:"/taichi/taichi-debug",permalink:"/taichi/taichi-debug",draft:!1,editUrl:"https://github.com/chunleili/chunleili.github.io/tree/master/docs/taichi/taichi-debug.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"snode",permalink:"/taichi/snode"},next:{title:"\u5728zeno\u4e2d\u4f7f\u7528\u8c03\u8bd5\u5668Debug!",permalink:"/zeno/debug"}},u={},p=[],s={toc:p};function l(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u4e3ataichi\u7a0b\u5e8f\u6682\u505c\u548creset\u4ee5\u4fbf\u4e8e\u8c03\u8bd5"},"\u4e3ataichi\u7a0b\u5e8f\u6682\u505c\u548creset\u4ee5\u4fbf\u4e8e\u8c03\u8bd5"),(0,i.kt)("p",null,"\u5148\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cfpaused\uff0c\u76f8\u5f53\u4e8eFLAG"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"paused = ti.field(dtype=ti.i32, shape=())\n")),(0,i.kt)("p",null,"\u518d\u628a\u4e3b\u5faa\u73af\u5305\u8d77\u6765"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"    while window.running:\n        if window.is_pressed('r'):\n            # Reset\n            initialize_mass_points()\n            current_t = 0\n\n        if window.is_pressed(ti.ui.SPACE):\n            paused[None] = not paused[None]\n        if paused[None] == True:\n            for i in range(substeps):\n                substep()\n                current_t += dt\n            update_vertices()\n")))}l.isMDXComponent=!0}}]);