"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7364],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),s=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return i.createElement(l.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(t),d=r,f=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return t?i.createElement(f,a(a({ref:n},u),{},{components:t})):i.createElement(f,a({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:r,a[1]=p;for(var s=2;s<o;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3776:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var i=t(7462),r=(t(7294),t(3905));const o={},a=void 0,p={unversionedId:"Houdini/write_tet",id:"Houdini/write_tet",title:"write_tet",description:"\u6211\u4eec\u7684\u76ee\u6807\u662f\u4ecehoudini\u8f93\u51fa\u751f\u6210\u7684\u56db\u9762\u4f53\uff0c\u5e0c\u671b\u662ftetgen\u683c\u5f0f\u7684\u3002",source:"@site/docs/Houdini/write_tet.md",sourceDirName:"Houdini",slug:"/Houdini/write_tet",permalink:"/Houdini/write_tet",draft:!1,editUrl:"https://github.com/chunleili/chunleili.github.io/tree/master/docs/Houdini/write_tet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u7528Houdini \u521b\u5efa\u7b2c\u4e00\u4e2a\u8f6f\u4f53\u6a21\u62df",permalink:"/Houdini/vellum-first/vellum-first"},next:{title:"cmake\u914d\u7f6eOpenGL\u7684\u73af\u5883",permalink:"/OpenGL/config"}},l={},s=[{value:"tetgen\u7684\u6570\u636e\u683c\u5f0f",id:"tetgen\u7684\u6570\u636e\u683c\u5f0f",level:2},{value:"Houdini\u4e2d\u4f7f\u7528python\u8282\u70b9\u5199\u51fa",id:"houdini\u4e2d\u4f7f\u7528python\u8282\u70b9\u5199\u51fa",level:2},{value:"\uff08\u975e\u5fc5\u8981\u5185\u5bb9\uff09\u5728taichi\u4e2dggui\u663e\u793a",id:"\u975e\u5fc5\u8981\u5185\u5bb9\u5728taichi\u4e2dggui\u663e\u793a",level:2},{value:"\u9644\u5f551\uff1aHoudini\u4e2dpython\u8282\u70b9\u7684\u811a\u672c\u5185\u5bb9",id:"\u9644\u5f551houdini\u4e2dpython\u8282\u70b9\u7684\u811a\u672c\u5185\u5bb9",level:3},{value:"\u9644\u5f552\uff1a houdni\u7684geo\u6587\u4ef6\u89e3\u6790\u8f6c\u6362\u4e3atetgen\u683c\u5f0f\u56db\u9762\u4f53\u7684\u811a\u672c",id:"\u9644\u5f552-houdni\u7684geo\u6587\u4ef6\u89e3\u6790\u8f6c\u6362\u4e3atetgen\u683c\u5f0f\u56db\u9762\u4f53\u7684\u811a\u672c",level:3},{value:"\u9644\u5f553\uff1a\u5728\u592a\u6781ggui\u4e2d\u663e\u793a",id:"\u9644\u5f553\u5728\u592a\u6781ggui\u4e2d\u663e\u793a",level:3}],u={toc:s},c="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u6211\u4eec\u7684\u76ee\u6807\u662f\u4ecehoudini\u8f93\u51fa\u751f\u6210\u7684\u56db\u9762\u4f53\uff0c\u5e0c\u671b\u662ftetgen\u683c\u5f0f\u7684\u3002"),(0,r.kt)("p",null,"\u4f17\u6240\u5468\u77e5\uff0choudini\u662f\u4e0d\u80fd\u76f4\u63a5\u8f93\u51fa\u56db\u9762\u4f53\u7684\u3002"),(0,r.kt)("p",null,"\u6709\u4e09\u65b9\u6848\u53bb\u89e3\u51b3\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u8f93\u51fa\u70b9\u4e91ply\u6587\u4ef6\uff0c\u7136\u540e\u5229\u7528tetgen\u751f\u6210\u7f51\u683c\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u8f93\u51faHounidi\u5185\u7f6e\u7684.geo\u683c\u5f0f\u6587\u4ef6\uff0c\u7136\u540e\u5199\u4e2a\u811a\u672c\u53bb\u89e3\u6790json\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u4e2ajson\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u76f4\u63a5\u4eceHoudini\u4e2d\u5229\u7528Python\u8282\u70b9\u8f93\u51fatetgen\u683c\u5f0f\u3002")),(0,r.kt)("p",null,"\u6211\u63a2\u7d22\u5e76\u8bd5\u9a8c\u4e86\u4ee5\u4e0a\u6240\u6709\u4e09\u79cd\u65b9\u6848\u3002\u4f18\u7f3a\u70b9\u5982\u4e0b\uff1a"),(0,r.kt)("p",null,"\u7b2c\u4e00\u79cd\u65b9\u6848\u7684\u7f3a\u70b9\u662f\u56db\u9762\u4f53\u662f\u4e0d\u53ef\u63a7\u7684\uff0c\u56e0\u4e3a\u662ftetgen\u73b0\u751f\u6210\u7684\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e8c\u79cd\u65b9\u6848\u7684\u7f3a\u70b9\u662f\u4f60\u8981\u4fdd\u8bc1geo\u91cc\u9762\u6ca1\u6709\u591a\u4f59\u7684\u6570\u636e\u3002\u4f8b\u5982\u8fd8\u5b58\u50a8\u7684\u989c\u8272\u6216uv\u7b49\u4fe1\u606f\uff0c\u6216\u8005houdini\u7684prim\u4e0a\u8fd8\u5b58\u4e86\u5176\u4ed6\u4fe1\u606f\uff0c\u5c31\u4f1a\u5bfc\u81f4\u89e3\u6790\u5931\u8d25\u3002\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528clean\u8282\u70b9\u6e05\u9664\u6389\u8fd9\u4e9b\u591a\u4f59\u4fe1\u606f\u3002\u6211\u4f1a\u628a\u811a\u672c\u653e\u5230\u6587\u672b\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e09\u79cd\u65b9\u6848\u662f\u6700\u597d\u7684\u3002\u53ef\u63a7\u6027\u6700\u597d\u3002\u56e0\u6b64\u540e\u9762\u6211\u4eec\u4f1a\u8bf4\u8fd9\u79cd\u65b9\u6cd5\u3002"),(0,r.kt)("h2",{id:"tetgen\u7684\u6570\u636e\u683c\u5f0f"},"tetgen\u7684\u6570\u636e\u683c\u5f0f"),(0,r.kt)("p",null,"\u6211\u4eec\u9996\u5148\u8981\u4ecb\u7ecd\u4e00\u4e0btetgen\u7684\u6570\u636e\u683c\u5f0f\uff1a"),(0,r.kt)("p",null,"\u6211\u4eec\u9700\u8981\u5176\u4e2d\u4e09\u79cd\uff1a\n.node\u7ed3\u5c3e\u4ee3\u8868\u9876\u70b9\u4f4d\u7f6e\n.ele\u7ed3\u5c3e\u4ee3\u8868\u56db\u9762\u4f53\u7f16\u53f7\n.face\u7ed3\u5c3e\u4ee3\u8868\u4e09\u89d2\u5f62\u7f16\u53f7\n",(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/8b8867521aaf45db830199918effa6a8.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"}),"\n\u5982\u56fe\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u6570\u4ee3\u8868\u70b9/\u9762/\u5355\u5143\u7684\u6570\u91cf"),(0,r.kt)("p",null,"ele\u548cface\u4e2d\u7684\u9876\u70b9\u7f16\u53f7\u5bf9\u5e94\u7684\u90fd\u662fnode\u4e2d\u70b9\u524d\u9762\u90a3\u4e2a\u7f16\u53f7\u3002"),(0,r.kt)("p",null,"\u4f8b\u5982ele\u4e2d\u6bcf\u4e00\u884c\u4e3a\uff1a\n\u5f53\u524d\u5355\u5143\u7684\u7f16\u53f7 \u56db\u9762\u4f53\u7b2c1\u4e2a\u9876\u70b9\u7684\u7f16\u53f7 \u56db\u9762\u4f53\u7b2c2\u4e2a\u9876\u70b9\u7684\u7f16\u53f7 \u56db\u9762\u4f53\u7b2c3\u4e2a\u9876\u70b9\u7684\u7f16\u53f7 \u56db\u9762\u4f53\u7b2c4\u4e2a\u9876\u70b9\u7684\u7f16\u53f7"),(0,r.kt)("h2",{id:"houdini\u4e2d\u4f7f\u7528python\u8282\u70b9\u5199\u51fa"},"Houdini\u4e2d\u4f7f\u7528python\u8282\u70b9\u5199\u51fa"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/8f74ddec157742e8bff633e1d19d12ef.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("p",null,"\u5404\u4e2a\u8282\u70b9\u7684\u4f5c\u7528\u5982\u4e0b\u6240\u793a\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"file: \u8bfb\u5165obj"),(0,r.kt)("li",{parentName:"ul"},"clean: \u6e05\u7406\u591a\u4f59\u4fe1\u606f\uff08\u975e\u5fc5\u8981\uff09"),(0,r.kt)("li",{parentName:"ul"},"polyreduce: \u7b80\u5316\u6a21\u578b\uff0c\u7f29\u5c0f\u9876\u70b9\u6570\uff08\u975e\u5fc5\u8981\uff09"),(0,r.kt)("li",{parentName:"ul"},"tetconform: \u751f\u6210\u56db\u9762\u4f53"),(0,r.kt)("li",{parentName:"ul"},"split: \u5206\u51fa\u8868\u9762\u4e09\u89d2\u5f62\u548c\u56db\u9762\u4f53"),(0,r.kt)("li",{parentName:"ul"},"null\uff1a\u65e0\u4f5c\u7528\u7684\u8282\u70b9\uff0c\u53ea\u662f\u4e3a\u4e86\u5360\u4f4d"),(0,r.kt)("li",{parentName:"ul"},"python node(write_faces): \u5199\u51fa\u8868\u9762\u4e09\u89d2\u5f62\u7f16\u53f7"),(0,r.kt)("li",{parentName:"ul"},"python node(write_nodes):\u5199\u51fa\u6240\u6709\u9876\u70b9\u4f4d\u7f6e"),(0,r.kt)("li",{parentName:"ul"},"python node(write_eles)\uff1a\u5199\u51fa\u56db\u9762\u4f53\u7f16\u53f7")),(0,r.kt)("p",null,"\u811a\u672c\u7684\u5185\u5bb9\u5728\u9644\u5f55\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/ed4114ea172444ffaa62736925faed00.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("p",null,"\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8981\u8bb2\u89e3\u4e00\u4e0bhoudini\u4e2d\u7684\u6570\u636e\u3002"),(0,r.kt)("p",null,"\u5206\u4e3a\u56db\u79cd\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"points \u51e0\u4f55\u70b9\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u70b9\u7684\u4f4d\u7f6e"),(0,r.kt)("li",{parentName:"ul"},"vertices: \u62d3\u6251\u9876\u70b9\u4fe1\u606f\u3002\u4f8b\u5982\u53ef\u4ee5\u5b58\u9876\u70b9\u7684\u7f16\u53f7"),(0,r.kt)("li",{parentName:"ul"},"primitives: \u56fe\u5143\u4fe1\u606f\u3002\u53ef\u4ee5\u5b58\u50a8\u4f8b\u5982\u8be5\u56db\u9762\u4f53\u7684\u4f53\u79ef\u5927\u5c0f\u7b49"),(0,r.kt)("li",{parentName:"ul"},"detail: \u6574\u4e2a\u51e0\u4f55\u4f53\u7684\u4fe1\u606f\u3002")),(0,r.kt)("p",null,"\u4e00\u4e2a\u5e38\u89c1\u7684\u8bef\u533a\u662f\u6df7\u6dc6points\u548cvertices\u3002points\u5b8c\u5168\u662f\u7a7a\u95f4\u4e2d\u771f\u5b9e\u5b58\u5728\u7684\u4e00\u4e2a\u70b9\u3002\u5177\u6709\u4f4d\u7f6e\u901f\u5ea6\u7b49\u4fe1\u606f\u3002\u4f46\u662fvertices\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5bf9\u9876\u70b9\u7f16\u53f7\u7684reference\u3002\u4f8b\u5982\u4e00\u4e2a\u6b63\u65b9\u4f53\u7684\u89d2\u70b9\uff0c\u53ef\u4ee5\u88ab\u4e09\u4e2a\u9762\u540c\u65f6\u5171\u4eab\u3002\u4ed6\u90fd\u662f\u540c\u4e00\u4e2a\u51e0\u4f55\u70b9\uff0c\u4f46\u662f\u5374\u6709\u4e09\u4e2a\u4e0d\u540c\u7684vertices\u5f52\u5c5e\u4e8e\u4e0d\u540c\u7684\u9762\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\u4fdd\u8bc1\u4e86\u552f\u4e00\u6027\uff1a\u4e00\u4e2apoint\u53ea\u5bf9\u5e94\u4e00\u4e2avertex\uff0c\u4e00\u4e2avertex\u53ea\u88ab\u4e00\u4e2aprimitive\u6240\u5305\u542b\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\uff0cvertices\u4e2d\u5b58\u7684\u662f\u4ec0\u4e48\u5b8c\u5168\u53d6\u51b3\u4e8e\u56fe\u5143\u662f\u4ec0\u4e48\u3002\u5047\u5982\u662f\u4e2a\u56db\u9762\u4f53\uff0c\u5c31\u53ef\u4ee5\u662f\u56db\u4e2a\u9876\u70b9\u7f16\u53f7\u3002\u5047\u5982\u662f\u4e09\u89d2\u5f62\uff0c\u5c31\u662f\u4e09\u89d2\u5f62\u4e09\u4e2a\u70b9\u7f16\u53f7\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/a29942faf7314abeb87c38e2da49b157.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("p",null,"\u6b63\u662f\u7531\u4e8e\u4e09\u89d2\u5f62\u4e0e\u56db\u9762\u4f53\u90fd\u88ab\u5b58\u5728primitive\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u624d\u7528split\u5c06\u5176\u5206\u5f00\u3002\u65b9\u9762\u540e\u9762\u8f93\u51fa\u3002"),(0,r.kt)("p",null,"\u6ce8\u610f\u5728tetconform\u4e2d\u52fe\u9009add surface triangles\u624d\u4f1a\u8f93\u51fa\u4e09\u89d2\u9762\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/2a5a7ce199564e27959b0b4deae12907.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("p",null,"\u6700\u540e\u7a0d\u5fae\u8bb2\u89e3\u4e0bpython\u8282\u70b9\u4e2d\u7684\u811a\u672c\u3002"),(0,r.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0choudini\u4e2d\u7684python\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\uff0c\u56e0\u6b64\u4e07\u7269\u7686\u4e3a\u5bf9\u8c61\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u4ec5\u4ee5write_nodes\u4e3a\u4f8b\u3002API\u8bf7\u67e5\u9605Houdini\u7684\u5b98\u65b9\u6587\u6863\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import hou # houdini\u5305\ngeo = hou.pwd().geometry() #\u5f53\u524dpython\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7aef\u53e3\u6240\u5bf9\u5e94\u7684\u5bf9\u8c61\uff0c\u662f\u4e2aSOP\u5bf9\u8c61\nprint(geo)\n\nimport os\npath = hou.hipFile.path()  #hip\u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\npath = os.path.dirname(path) + "/models/bunny2000_try.node"\nprint(f"path is {path}")\n\npts = geo.points() # \u83b7\u53d6SOP\u5bf9\u8c61\u4e0a\u7684point\u5bf9\u8c61\u5217\u8868\uff08\u662f\u4e2alist\uff09\nnumpts = len(pts)\nprint("numpts:", numpts)\n\nf = open(path, \'w\')\nf.write(str(numpts)+"  3  0  0\\n")\nfor i in range(numpts):\n    pt = pts[i] \n    pos = pt.position() #\u83b7\u53d6point\u5bf9\u8c61\u7684position\u5c5e\u6027\uff0c\u5c31\u662f\u4f4d\u7f6e\n    f.write("   "+str(i)+"    "+str(pos[0])+"  "+str(pos[1])+"  "+str(pos[2])+"\\n")\nf.close()\n')),(0,r.kt)("p",null,"\u5b8c\u6bd5\u3002"),(0,r.kt)("h2",{id:"\u975e\u5fc5\u8981\u5185\u5bb9\u5728taichi\u4e2dggui\u663e\u793a"},"\uff08\u975e\u5fc5\u8981\u5185\u5bb9\uff09\u5728taichi\u4e2dggui\u663e\u793a"),(0,r.kt)("p",null,"\u8bf7\u89c1\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/chunleili/learn-meshtaichi"},"https://github.com/chunleili/learn-meshtaichi"),"\n\u4e2d\u7684tut03 "),(0,r.kt)("p",null,"\u5176\u4e2d\u4e3b\u8981\u5c31\u662f\u591a\u5199\u4e86directly_import_surf\u8fd9\u4e2a\u51fd\u6570\u800c\u5df2\u3002"),(0,r.kt)("p",null,"\u7f51\u683c\u6587\u4ef6\u4e5f\u8bf7\u89c1\u8fd9\u91cc\u3002"),(0,r.kt)("p",null,"\u7ed3\u679c\u5982\u56fe"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/7166704330934fe4a582b098d5a11e4a.png",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,r.kt)("h3",{id:"\u9644\u5f551houdini\u4e2dpython\u8282\u70b9\u7684\u811a\u672c\u5185\u5bb9"},"\u9644\u5f551\uff1aHoudini\u4e2dpython\u8282\u70b9\u7684\u811a\u672c\u5185\u5bb9"),(0,r.kt)("p",null,"write_faces"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import hou\ngeo = hou.pwd().geometry()\nprint(geo)\n\nimport os\npath = hou.hipFile.path() \npath = os.path.dirname(path) + "/models/bunny2000_try.face"\nprint(f"path is {path}")\n\n\n# write surface triangles\ntris = geo.prims()\nnum_tris = len(tris)\nf = open(path[:-4]+"face", \'w\')\nf.write(str(num_tris)+"  0\\n")\nfor i in range(num_tris):\n    tri = tris[i].points()\n    f.write("   "+str(i)+"    "+str(tri[0].number())+" "+str(tri[1].number())+" "+str(tri[2].number())+ "  -1" +"\\n")\nf.close()\n')),(0,r.kt)("p",null,"write_nodes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import hou\ngeo = hou.pwd().geometry()\nprint(geo)\n\nimport os\npath = hou.hipFile.path() \npath = os.path.dirname(path) + "/models/bunny2000_try.node"\nprint(f"path is {path}")\n\npts = geo.points()\nnumpts = len(pts)\nprint("numpts:", numpts)\n\nf = open(path, \'w\')\nf.write(str(numpts)+"  3  0  0\\n")\nfor i in range(numpts):\n    pt = pts[i]\n    pos = pt.position()\n    f.write("   "+str(i)+"    "+str(pos[0])+"  "+str(pos[1])+"  "+str(pos[2])+"\\n")\nf.close()\n')),(0,r.kt)("p",null,"write_eles"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import hou\ngeo = hou.pwd().geometry()\nprint(geo)\n\nimport os\npath = hou.hipFile.path() \npath = os.path.dirname(path) + "/models/bunny2000_try.ele"\nprint(f"path is {path}")\n\n\neles = geo.prims()\nnum_eles = len(eles)\nprint("num_eles:", num_eles)\nf1 = open(path[:-4]+".ele", \'w\')\nf1.write(str(num_eles)+"  4  0\\n")\nfor i in range(num_eles):\n    ele = eles[i].points()\n    f1.write("   "+str(i)+"    "+str(ele[0].number())+"  "+str(ele[1].number())+"  "+str(ele[2].number())+"  "+str(ele[3].number())+"\\n")\nf1.close()\n')),(0,r.kt)("h3",{id:"\u9644\u5f552-houdni\u7684geo\u6587\u4ef6\u89e3\u6790\u8f6c\u6362\u4e3atetgen\u683c\u5f0f\u56db\u9762\u4f53\u7684\u811a\u672c"},"\u9644\u5f552\uff1a houdni\u7684geo\u6587\u4ef6\u89e3\u6790\u8f6c\u6362\u4e3atetgen\u683c\u5f0f\u56db\u9762\u4f53\u7684\u811a\u672c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import os\nimport json\n\ndef read_geo(from_path):\n    with open(from_path,\'r\') as f:\n        data=json.load(f)\n\n    # \u8bfb\u53d6\u9876\u70b9\u4e2a\u6570\u7b49\u4fe1\u606f\n    pointcount=data[5]  # \u70b9\u4e2a\u6570\n    vertexcount=data[7] \n    primitivecount=data[9] # \u56db\u9762\u4f53\u4e2a\u6570\n\n    # \u8bfb\u53d6\u56db\u9762\u4f53\u7684\u7d22\u5f15\n    topology = data[13]\n    pointref = topology[1]\n    tet_indices = pointref[1]# \u56db\u9762\u4f53\u7684\u7d22\u5f15\uff0c\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\n\n    # \u8bfb\u53d6\u9876\u70b9\u7684\u4f4d\u7f6e\n    attributes = data[15]\n    pointattributes = attributes[1]\n    positions = pointattributes[0][1][7][5]\n\n    return tet_indices,positions, pointcount,vertexcount,primitivecount\n\n\ndef write_tetgen(tet_indices,positions, pointcount, primitivecount,to_path, gen_face=False):\n    # \u5199\u5165tetgen\u7684node\u6587\u4ef6(\u4e5f\u5c31\u662f\u9876\u70b9\u7684\u4f4d\u7f6e)\n    node_file = to_path+".node"\n    if(os.path.exists(node_file)):\n        print("remove file: "+node_file)\n        os.remove(node_file)\n    with open(node_file,\'w\') as f:\n        f.write(str(pointcount)+"  3  0  0\\n")\n        for i in range(pointcount):\n            f.write("   "+str(i)+"    "+str(positions[i][0])+"  "+str(positions[i][1])+"  "+str(positions[i][2])+"\\n")\n\n    # \u5199\u5165tetgen\u7684ele\u6587\u4ef6(\u4e5f\u5c31\u662f\u56db\u9762\u4f53\u7684\u7d22\u5f15)\n    ele_file = to_path+".ele"\n    if(os.path.exists(ele_file)):\n        print("remove file: "+ele_file)\n        os.remove(ele_file)\n    with open(ele_file,\'w\') as f:\n        f.write(str(primitivecount)+"  4  0\\n")\n        for i in range(primitivecount):\n            f.write("   "+str(i)+"    "+str(tet_indices[i*4])+"  "+str(tet_indices[i*4+1])+"  "+str(tet_indices[i*4+2])+"  "+str(tet_indices[i*4+3])+"\\n")\n\n    # \u5199\u5165tetgen\u7684face\u6587\u4ef6(\u4e5f\u5c31\u662f\u4e09\u89d2\u9762\u7684\u7d22\u5f15)\n    face_file = to_path+".face"\n    if(os.path.exists(face_file)):\n        print("remove file: "+face_file)\n        os.remove(face_file)\n\n    if(gen_face):\n        # \u7531\u4e8e\u672c\u8eab\u6ca1\u6709\u4e09\u89d2\u9762\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u751f\u6210face\uff0c\u5c31\u81ea\u5df1\u904d\u5386\u4e00\u904d\n        facecount = 0\n        for i in range(primitivecount):\n            facecount += 4\n        with open(face_file,\'w\') as f:\n            f.write(str(facecount)+" 0\\n")\n            face_i = 0\n            for i in range(primitivecount):\n                f.write("    "+str(face_i)+"    " + str(tet_indices[i*4])+"    "+str(tet_indices[i*4+2])+"    "+str(tet_indices[i*4+1])+"  -1\\n")\n                face_i += 1\n                f.write("    "+str(face_i)+"    " + str(tet_indices[i*4])+"    "+str(tet_indices[i*4+3])+"    "+str(tet_indices[i*4+2])+"  -1\\n")\n                face_i += 1\n                f.write("    "+str(face_i)+"    " + str(tet_indices[i*4])+"    "+str(tet_indices[i*4+1])+"    "+str(tet_indices[i*4+3])+"  -1\\n")\n                face_i += 1\n                f.write("    "+str(face_i)+"    " + str(tet_indices[i*4+1])+"    "+str(tet_indices[i*4+2])+"    "+str(tet_indices[i*4+3])+"  -1\\n")\n                face_i += 1\n    \n    print("\\n\\nwrite tetgen file success! \\nnode file: "+node_file+"\\nele file: "+ele_file)\n\n\nif __name__ == \'__main__\':\n    from_path="models/bunny1000_dilate/bunny1000_dilate.geo"\n    to_path=from_path[:-4]\n\n    tet_indices,positions, pointcount,vertexcount,primitivecount = read_geo(from_path)\n\n    write_tetgen(tet_indices,positions, pointcount,primitivecount,to_path, gen_face=True)\n')),(0,r.kt)("h3",{id:"\u9644\u5f553\u5728\u592a\u6781ggui\u4e2d\u663e\u793a"},"\u9644\u5f553\uff1a\u5728\u592a\u6781ggui\u4e2d\u663e\u793a"),(0,r.kt)("p",null,"learn-meshtaichi tut03"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import taichi as ti\nimport meshtaichi_patcher as Patcher\n\nti.init()\n\n# CAUTION: \u6211\u4eec\u53ea\u52a0\u4e86\u8fd9\u4e00\u4e2a\u51fd\u6570, \u5176\u4ed6\u7684\u57fa\u672c\u4e0d\u53d8\u3002\u8fd9\u4e2a\u5c31\u662f\u7528\u6765\u8bfb\u53d6face\u6587\u4ef6\u7684\ndef directly_import_surf():\n    import numpy as np\n    import os\n    pwd = os.getcwd().replace("\\\\", "/")\n    face_file_name = pwd + "/models/bunny_tet/bunny_tet.face"\n    # print("face_file_name: ", face_file_name)\n    with open(face_file_name, \'r\') as f:\n        lines = f.readlines()\n        NF = int(lines[0].split()[0])\n        face_indices = np.zeros((NF, 3), dtype=np.int32)\n        for i in range(NF):\n            face_indices[i] = np.array(lines[i + 1].split()[1:-1], dtype=np.int32)\n    return face_indices.flatten()\narmadillo_surf_indices = directly_import_surf()\n\n# \u8bfb\u5165\u56db\u9762\u4f53\u7f51\u683c\ndef init_tet_mesh(model_name):\n    #\u57fa\u672c\u4e0e\u4e0a\u9762\u4e00\u6837\uff0c\u53ea\u662f\u591a\u4e86\u4e00\u4e2aCV\u5173\u7cfb\uff0c\u8868\u793a\u901a\u8fc7\u4e00\u4e2acell\u53ef\u4ee5\u627e\u5230\u5b83\u7684\u56db\u4e2a\u9876\u70b9\n    theMesh = Patcher.load_mesh(model_name, relations=["CV"])\n    theMesh.verts.place({\'x\' : ti.math.vec3})\n    theMesh.verts.x.from_numpy(theMesh.get_position_as_numpy())\n    display_indices = ti.field(ti.u32, shape = len(armadillo_surf_indices))\n    display_indices.from_numpy(armadillo_surf_indices) #\u8fd9\u91cc\u76f4\u63a5\u8bfb\u5165\u4e86face\u6587\u4ef6\n    return theMesh, display_indices\n\n\nmodel_name = "models/bunny_tet/bunny_tet.node"\narmadillo, armadillo_indices = init_tet_mesh(model_name)\narmadillo_indices.to_numpy()\n\nwindow = ti.ui.Window("taichimesh", (1024, 1024))\ncanvas = window.get_canvas()\nscene = ti.ui.Scene()\ncamera = ti.ui.Camera()\ncamera.up(0, 1, 0)\ncamera.fov(75)\ncamera.position(4.5,4.5,0.6)\ncamera.lookat(3.8, 3.8, 0.5)\ncamera.fov(75)\n\nframe = 0\npaused = ti.field(int, shape=())\npaused[None] = 1\nwhile window.running:\n    # \u7528\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u901a\u8fc7\u63d0\u524d\u8bbe\u7f6e\u4e00\u4e2apaused\u53d8\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u6309\u7a7a\u683c\u6682\u505c\u548c\u7ee7\u7eed\u4e86\uff01\n    for e in window.get_events(ti.ui.PRESS):\n        if e.key == ti.ui.SPACE:\n            paused[None] = not paused[None]\n            print("paused:", paused[None])\n    if not paused[None]:\n        # substep()\n        print(f"frame: {frame}")\n        frame += 1\n    # \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u67e5\u770b\u76f8\u673a\u7684\u4f4d\u7f6e\u548clookat\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u77e5\u9053\u600e\u4e48\u8c03\u6574\u76f8\u673a\u7684\u4f4d\u7f6e\u4e86\n    # print("camera.curr_position",camera.curr_position)\n    # print("camera.curr_lookat",camera.curr_lookat)\n\n    # movement_speed=0.05\u8868\u793a\u79fb\u52a8\u901f\u5ea6\uff0chold_key=ti.ui.RMB\u8868\u793a\u6309\u4f4f\u53f3\u952e\u53ef\u4ee5\u79fb\u52a8\u89c6\u89d2\n    # wasdqe\u53ef\u4ee5\u79fb\u52a8\u76f8\u673a\n    camera.track_user_inputs(window, movement_speed=0.05, hold_key=ti.ui.RMB)\n    scene.set_camera(camera)\n    \n    scene.mesh(armadillo.verts.x, armadillo_indices, color = (0.5,0.5,0.5))\n\n    scene.point_light(pos=(0.5, 1.5, 0.5), color=(1, 1, 1))\n    scene.ambient_light((0.5,0.5,0.5))\n\n    canvas.scene(scene)\n\n    window.show()\n')))}m.isMDXComponent=!0}}]);