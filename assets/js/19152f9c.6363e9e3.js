"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7920],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,b=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(b,a(a({ref:t},u),{},{components:n})):r.createElement(b,a({ref:t},u))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7690:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={},a="\u7528Eigen\u6c42\u89e3BiCGStab",l={unversionedId:"Eigen/BiCGStab",id:"Eigen/BiCGStab",title:"\u7528Eigen\u6c42\u89e3BiCGStab",description:"\u5bf9\u5e94\u7684github repo",source:"@site/docs/Eigen/BiCGStab.md",sourceDirName:"Eigen",slug:"/Eigen/BiCGStab",permalink:"/Eigen/BiCGStab",draft:!1,editUrl:"https://github.com/chunleili/chunleili.github.io/tree/master/docs/Eigen/BiCGStab.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"VS Code\u4e2d\u5199mardown\u76f4\u63a5\u7c98\u8d34\u56fe\u7247\u7684\u795e\u5668",permalink:"/docusaurus/markdown-paste/paste-image"},next:{title:"DebugEigen",permalink:"/Eigen/DebugEigen"}},c={},s=[],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u7528eigen\u6c42\u89e3bicgstab"},"\u7528Eigen\u6c42\u89e3BiCGStab"),(0,i.kt)("p",null,"\u5bf9\u5e94\u7684github repo"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/chunleili/learn-eigen"},"https://github.com/chunleili/learn-eigen")),(0,i.kt)("p",null,"\u4e3b\u8981\u4ee3\u7801"),(0,i.kt)("p",null,"main.cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'#include <Eigen/Sparse>\n#include <unsupported/Eigen/SparseExtra>\n#include <iostream>\nusing namespace Eigen;\n\n\nint main()\n{\n    VectorXd x, b;\n    SparseMatrix<double> A;\n\n    /* ... fill A and b ... */\n    Eigen::loadMarket(A, "e05r0500.mtx");\n    Eigen::loadMarketVector(b, "e05r0500_rhs1.mtx");\n\n    std::cout<<"A: "<<A.rows()<<" "<<A.cols() <<std::endl;\n    std::cout<<"b: "<<b.rows()<<" "<<b.cols() <<std::endl;\n\n    BiCGSTAB<SparseMatrix<double>, IncompleteLUT<double>> solver;\n    solver.compute(A);\n    x = solver.solve(b);\n    std::cout << "#iterations:     " << solver.iterations() << std::endl;\n    std::cout << "estimated error: " << solver.error() << std::endl;\n    std::cout<< "solver info: "<< solver.info() <<std::endl;\n    std::cout<< "Eigen::Success "<< Eigen::Success<<std::endl;\n    \n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"loadMarket"),"\u7528\u6765\u8bfb\u53d6",(0,i.kt)("inlineCode",{parentName:"li"},"market matrix"),"\u683c\u5f0f\u7684\u77e9\u9635\u6570\u636e"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BiCGSTAB<SparseMatrix<double>, IncompleteLUT<double>> solver;"),"\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6c42\u89e3\u5668\u3002\u7b2c\u4e00\n\u4e2a\u6a21\u677f\u53c2\u6570\u662f\u77e9\u9635\u7684\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u662f",(0,i.kt)("inlineCode",{parentName:"li"},"Precondistioner"),"\u3002",(0,i.kt)("inlineCode",{parentName:"li"},"Preconditioner"),"\u5f88\u91cd\u8981\uff0c\u5b9a\u4e49\u5f97\u597d\u53ef\u4ee5\u4f7f\u6536\u655b\u901f\u5ea6\u5feb\u51e0\u4e07\u500d\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"solver.compute()"),"\u548c ",(0,i.kt)("inlineCode",{parentName:"li"},"x=solver.solve(b)"),"\u5c31\u662f\u5b9e\u9645\u8ba1\u7b97\u7684\u6b65\u9aa4\u4e86"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u540e\u5bf9\u6bd4",(0,i.kt)("inlineCode",{parentName:"li"},"Eigen::Success\u548csolver.info()"),"\u6765\u6bd4\u8f83\u662f\u5426\u6c42\u89e3\u6210\u529f")))}d.isMDXComponent=!0}}]);