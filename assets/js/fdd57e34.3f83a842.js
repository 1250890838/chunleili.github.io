"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3641],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>d});var l=n(7294);function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){s(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,l,s=function(t,e){if(null==t)return{};var n,l,s={},r=Object.keys(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||(s[n]=t[n]);return s}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(s[n]=t[n])}return s}var o=l.createContext({}),p=function(t){var e=l.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=p(t.components);return l.createElement(o.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},m=l.forwardRef((function(t,e){var n=t.components,s=t.mdxType,r=t.originalType,o=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=p(n),d=s,g=m["".concat(o,".").concat(d)]||m[d]||c[d]||r;return n?l.createElement(g,a(a({ref:e},u),{},{components:n})):l.createElement(g,a({ref:e},u))}));function d(t,e){var n=arguments,s=e&&e.mdxType;if("string"==typeof t||s){var r=n.length,a=new Array(r);a[0]=m;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i.mdxType="string"==typeof t?t:s,a[1]=i;for(var p=2;p<r;p++)a[p]=n[p];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8072:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var l=n(7462),s=(n(7294),n(3905));const r={},a="\u4f7f\u7528ctest\u914d\u7f6egoogletest",i={unversionedId:"cmake/ctest-googletest",id:"cmake/ctest-googletest",title:"\u4f7f\u7528ctest\u914d\u7f6egoogletest",description:"\u4ecb\u7ecd",source:"@site/docs/cmake/ctest-googletest.md",sourceDirName:"cmake",slug:"/cmake/ctest-googletest",permalink:"/cmake/ctest-googletest",draft:!1,editUrl:"https://github.com/chunleili/chunleili.github.io/tree/master/docs/cmake/ctest-googletest.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5b9d\u85cf\u6536\u85cf\u5939",permalink:"/Treasures"},next:{title:"\u5229\u7528std::chrono\u6765\u8fdb\u884c\u8ba1\u65f6, \u4ee5\u6d4b\u8bd5\u6027\u80fd",permalink:"/cpp/chrono"}},o={},p=[{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",level:2},{value:"\u5b9e\u8df5",id:"\u5b9e\u8df5",level:2},{value:"\u76ee\u5f55\u7ed3\u6784",id:"\u76ee\u5f55\u7ed3\u6784",level:3},{value:"\u6839\u76ee\u5f55CMakeLists.txt",id:"\u6839\u76ee\u5f55cmakeliststxt",level:3},{value:"src",id:"src",level:3},{value:"tests",id:"tests",level:3},{value:"\u6d4b\u8bd5\u6587\u4ef6: gtest",id:"\u6d4b\u8bd5\u6587\u4ef6-gtest",level:4},{value:"\u4f7f\u7528ctest\u5e76\u5f15\u5165gtest\u7684CMakeLists.txt",id:"\u4f7f\u7528ctest\u5e76\u5f15\u5165gtest\u7684cmakeliststxt",level:4},{value:"\u6784\u5efa\u8fd0\u884cctest",id:"\u6784\u5efa\u8fd0\u884cctest",level:3}],u={toc:p};function c(t){let{components:e,...n}=t;return(0,s.kt)("wrapper",(0,l.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"\u4f7f\u7528ctest\u914d\u7f6egoogletest"},"\u4f7f\u7528ctest\u914d\u7f6egoogletest"),(0,s.kt)("h2",{id:"\u4ecb\u7ecd"},"\u4ecb\u7ecd"),(0,s.kt)("p",null,"\u4ee5\u4e0b\u8ba8\u8bba\u5747\u4e3aC++"),(0,s.kt)("p",null,"\u6211\u4eec\u9996\u5148\u8981\u7406\u89e3\u4ec0\u4e48\u662f\u6d4b\u8bd5\u3002\u6d4b\u8bd5\u5c31\u662f\u628a\u7a0b\u5e8f\u7684\u67d0\u4e2a\u51fd\u6570\u5355\u72ec\u62ff\u51fa\u6765\uff0c\u7136\u540e\u4e3a\u5b83\u5355\u72ec\u5199\u4e00\u4e2amain\u51fd\u6570\u3002\u8fd0\u884c\u8fd9\u4e2amain\u51fd\u6570\uff0c\u770b\u770b\u6253\u5370\u7ed3\u679c\u662f\u4e0d\u662f\u9884\u671f\u7684\uff0c\u90a3\u5c31\u662f\u6d4b\u8bd5\u4e86\u3002"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"googletest\u662f\u4ec0\u4e48\uff1a")),(0,s.kt)("p",null,"\u7531\u4e8e\u6d4b\u8bd5\u662f\u8f6f\u4ef6\u5f00\u53d1\u901a\u7528\u6d41\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u5f53\u7136\u53ef\u4ee5\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\u6765\u89c4\u8303\u5316\u6d4b\u8bd5\u6d41\u7a0b\u3002\u5176\u4e2dGoogleTest\u5c31\u662f\u8c37\u6b4c\u5bb6\u63a8\u51fa\u7684\u6d4b\u8bd5\u6846\u67b6\u3002\u5b83\u4e3a\u4f60\u5b9a\u4e49\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u5b8f\uff0c\u8fd8\u63d0\u4f9b\u4e86\u597d\u770b\u7684\u6d4b\u8bd5\u8f93\u51fa\uff08\u6bd4\u5982\u6d4b\u8bd5\u5931\u8d25\u7684\u65f6\u5019\u5230\u5e95\u54ea\u91cc\u9519\u4e86\uff1f\u6b63\u786e\u503c\u662f\u591a\u5c11\uff1f\uff09\u3002\u6211\u4eec\u8981\u8bb0\u4f4f\uff0c\u5b83\u53ea\u662f\u4e2a\u65b9\u4fbf\u7684\u5de5\u5177\uff0c\u4f60\u5b8c\u5168\u4f60\u53ef\u81ea\u5df1\u624b\u5199\u4e00\u4e2a\u7b80\u964b\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u53ea\u8981\u5199\u81ea\u5df1\u7684main\u51fd\u6570\u5373\u53ef\u3002"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"ctest\u662f\u4ec0\u4e48\uff1a")),(0,s.kt)("p",null,"ctest\u662fcmake\u4e2d\u7684\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u811a\u672c\u5316\u6d4b\u8bd5\u7684\u5de5\u5177\u3002\u5f53\u4f60\u8981\u7ba1\u7406\u9879\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u822c\u4f1a\u7528\u5230cmake\u3002ctest\u662f\u7528\u6765\u8c03\u7528\u548c\u5b9a\u4e49\u6d4b\u8bd5\u7684\u3002\u4f60\u7684\u6d4b\u8bd5\u53ef\u4ee5\u662f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4e00\u4e2a\u811a\u672c\uff08python powershell bash\u7b49\uff09\u3002ctest\u4e0d\u6e05\u695a\u4f60\u7684\u6d4b\u8bd5\u7a0b\u5e8f\u662f\u5565\uff0c\u5b83\u53ea\u77e5\u9053\u53bb\u8c03\u7528\u4e00\u4e2a\u53ef\u6267\u884c\u7684\u6587\u4ef6\u5373\u53ef\u3002"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\u4e24\u8005\u533a\u522b\uff1f"),"\n\u8fd9\u5c31\u8ddf\u6c7d\u8f66\u5916\u58f3\u548c\u6c7d\u8f66\u5f15\u64ce\u7684\u533a\u522b\u4e00\u6837\u3002ctest\u662f\u90a3\u4e2a\u5916\u58f3\u3002gtest\u662f\u90a3\u4e2a\u5f15\u64ce\u3002ctest\u53ea\u77e5\u9053\u53bb\u6267\u884c\u67d0\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5b83\u4e0d\u7ba1\u4f60\u90a3\u4e2a\u91cc\u9762\u662f\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u5c31\u6253\u5370\u4e2ahello world\u4e5f\u6ca1\u5173\u7cfb\u3002\u800cgtest\u662f\u7528\u6765\u751f\u6210\u6d4b\u8bd5\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u624b\u5199\u6d4b\u8bd5\u7a0b\u5e8f\u53ef\u80fd\u5343\u5947\u767e\u602a\uff0c\u4e0d\u7b26\u5408\u89c4\u8303\uff0c\u56e0\u6b64\u53ef\u4ee5\u501f\u52a9googletest\u6765\u5199\u4e00\u4e2a\u89c4\u8303\u7684\u6d4b\u8bd5\u3002"),(0,s.kt)("p",null,"ctest\u8fd8\u53ef\u4ee5\u642d\u914d\u4efb\u4f55\u5176\u4ed6\u6d4b\u8bd5\u6846\u67b6\u4f7f\u7528\uff0c\u6bd4\u5982catch2, boost.test\u7b49\u7b49\u3002\u53ea\u4e0d\u8fc7gtest\u662f\u6700\u6d41\u884c\u7684\u3002"),(0,s.kt)("p",null,"\u867d\u8bf4\u662fctest\u3002\u4f46\u5b83\u4e0d\u8fc7\u662fcmake\u8bed\u6cd5\u7684\u4e00\u90e8\u5206\u800c\u5df2\u3002"),(0,s.kt)("p",null,"\u53c2\u8003\u535a\u6587\uff1a\n",(0,s.kt)("a",{parentName:"p",href:"https://matgomes.com/integrate-google-test-into-cmake/"},"https://matgomes.com/integrate-google-test-into-cmake/")),(0,s.kt)("h2",{id:"\u5b9e\u8df5"},"\u5b9e\u8df5"),(0,s.kt)("h3",{id:"\u76ee\u5f55\u7ed3\u6784"},"\u76ee\u5f55\u7ed3\u6784"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 scripts\n\u2502   \u251c\u2500\u2500 build.sh\n\u2502   \u2514\u2500\u2500 clean-build.sh\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 CMakeLists.txt\n\u2502   \u2514\u2500\u2500 multiply\n\u2502       \u251c\u2500\u2500 CMakeLists.txt\n\u2502       \u251c\u2500\u2500 include\n\u2502       \u2502   \u2514\u2500\u2500 multiply\n\u2502       \u2502       \u2514\u2500\u2500 multiply.h\n\u2502       \u2514\u2500\u2500 multiply.cpp\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 CMakeLists.txt\n    \u2514\u2500\u2500 multiply_test.cpp\n")),(0,s.kt)("p",null,"test\u76ee\u5f55\u662f\u5355\u72ec\u5b58\u653e\u6d4b\u8bd5\u7684\u5730\u65b9\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6d4b\u8bd5\u7a0b\u5e8f\uff08\u4e5f\u662f\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u76ee\u6807\uff09\u4e0e\u9879\u76ee\u672c\u8eab\u7684\u7a0b\u5e8f\u662f\u4e92\u65e0\u74dc\u845b\u7684\uff0c\u4e95\u6c34\u4e0d\u72af\u6cb3\u6c34\u3002"),(0,s.kt)("p",null,"src\u5b58\u653e\u7684\u5c31\u662f\u9879\u76ee\u672c\u8eab\u7684\u6e90\u7801\u3002\n\u4e0b\u9762\u5c31\u662f\u4e00\u4e2amultiply\u3002\u4ee3\u8868multiply\u8fd9\u4e2a\u76ee\u6807\u3002"),(0,s.kt)("p",null,"\u5934\u6587\u4ef6\u5355\u72ec\u653e\u5728include\u5f53\u4e2d\u3002\n\u5e76\u4e14include\u7684\u76ee\u5f55\u7ed3\u6784\u4e0e\u6e90\u7801\u76ee\u5f55\u7ed3\u6784\u4e00\u81f4\u3002"),(0,s.kt)("h3",{id:"\u6839\u76ee\u5f55cmakeliststxt"},"\u6839\u76ee\u5f55CMakeLists.txt"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"cmake_minimum_required(VERSION 3.16)\nproject(MultiplyTest LANGUAGES CXX)\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nenable_testing()\n\nadd_subdirectory(src)\nadd_subdirectory(tests)\n")),(0,s.kt)("p",null,"\u5176\u4e2d\u6ce8\u610fenable_testing()\u4ee3\u8868\u5f00\u542fctest, \u8981\u5c3d\u91cf\u628a\u5b83\u5f80\u524d\u653e\u3002"),(0,s.kt)("h3",{id:"src"},"src"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"src/CMakeLists.txt")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"add_subdirectory(multiply)\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"src\\multiply\\CMakeLists.txt")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"add_library(multiply multiply.cpp)\n\ntarget_include_directories(multiply PUBLIC include)\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"src\\multiply\\multiply.cpp")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <multiply/multiply.h>\n\nint multiply(int a, int b)\n{\n    return a*b;\n}\n\nfloat multiply(float a, float b)\n{\n    return a*b;\n}\n\ndouble multiply(double a, double b)\n{\n    return a*b;\n}\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"src\\multiply\\include\\multiply\\multiply.h")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"int multiply(int a, int b);\n\nfloat multiply(float a, float b);\n\ndouble multiply(double a, double b);\n")),(0,s.kt)("h3",{id:"tests"},"tests"),(0,s.kt)("h4",{id:"\u6d4b\u8bd5\u6587\u4ef6-gtest"},"\u6d4b\u8bd5\u6587\u4ef6: gtest"),(0,s.kt)("p",null,"\u5982\u4e0a\u6587\u6240\u8bf4\uff0cgtest\u4e0d\u8fc7\u5c31\u662f\u89c4\u8303\u4e00\u4e0b\u6d4b\u8bd5\u7684\u5199\u6cd5\u5e76\u589e\u52a0\u4e86\u4e00\u4e9b\u5b8f\u3002\u6211\u4eec\u5199\u6d4b\u8bd5\u4e0d\u8fc7\u5c31\u662f\u5199main\u51fd\u6570\u800c\u5df2\u3002"),(0,s.kt)("p",null,"\u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u5b8f\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"TEST(testName, subName)"),(0,s.kt)("li",{parentName:"ul"},"ASSERT_EQ(expected, actual)")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"tests\\multiply_test.cpp")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <multiply/multiply.h>\n#include <gtest/gtest.h>\n\nTEST(MultiplyTests, TestIntegerOne_One)\n{\n    const auto expected = 1;\n    const auto actual = multiply(1, 1);\n    ASSERT_EQ(expected, actual);\n}\n\nTEST(MultiplyTests, TestIntegerZero_Zero)\n{\n    const auto expected = 0;\n    const auto actual = multiply(0, 0);\n    ASSERT_EQ(expected, actual);\n}\n\nTEST(MultiplyTests, TestIntegerZero_One)\n{\n    const auto expected = 0;\n    const auto actual = multiply(0, 1);\n    ASSERT_EQ(actual, expected);\n}\n\nint main(int argc, char** argv)\n{\n    ::testing::InitGoogleTest(&argc, argv);\n    return RUN_ALL_TESTS();\n}\n")),(0,s.kt)("h4",{id:"\u4f7f\u7528ctest\u5e76\u5f15\u5165gtest\u7684cmakeliststxt"},"\u4f7f\u7528ctest\u5e76\u5f15\u5165gtest\u7684CMakeLists.txt"),(0,s.kt)("p",null,"\u9996\u5148\uff0c\u6211\u4eec\u8981\u5148\u5b89\u88c5gtest\u3002\u4f60\u53ef\u4ee5\u7528vcpkg\u4e4b\u7c7b\u7684\u5b89\u88c5\uff0c\u4e5f\u53ef\u4f7f\u7528cmake\u81ea\u5e26\u7684\u8bed\u6cd5FetchContent\u3002gtest\u4e5f\u9700\u8981\u7f16\u8bd1\u3002"),(0,s.kt)("p",null,"\u5176\u6b21\uff0c\u8981\u7f16\u8bd1\u5e76\u8fde\u63a5\u6d4b\u8bd5\u7a0b\u5e8f\u3002multiply_test \u662f\u6211\u4eec\u5199\u7684\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u4e5f\u5c31\u662f\u5355\u72ec\u5b9a\u4e49\u7684\u4e00\u4e2amain\u51fd\u6570\u3002\u6211\u4eec\u8981\u628a\u88ab\u6d4b\u7684\u51fd\u6570\u7f16\u8bd1\u6210\u7684\u9759\u6001\u5e93multiply\u94fe\u63a5\u5230multiply_test \u4e0a\uff0c\u540c\u65f6\u4e5f\u628agtest\u94fe\u63a5\u5230multiply_test \u4e0a\u3002"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"tests\\CMakeLists.txt")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"include(FetchContent)\n\n# \u5c06Googletest\u4e0b\u8f7d\u5230\u672c\u5730\u7684build\u5f53\u4e2d\uff0c\u4f5c\u4e3a\u672c\u5730\u9879\u76ee\u7684\u4e00\u90e8\u5206\u3002\u6240\u6709googletest\u7684\u76ee\u6807\u90fd\u5c06\u53ef\u89c1\u3002\nFetchContent_Declare(\n    googletest\n    GIT_REPOSITORY https://github.com/google/googletest.git\n    GIT_TAG release-1.11.0\n)\n\nFetchContent_MakeAvailable(googletest)\n\n# \u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684googletest\u7f16\u8bd1\u6210\u5e93 \u4f7f\u7528IMPORTED\u5173\u952e\u5b57\nadd_library(GTest::GTest INTERFACE IMPORTED)\n# \u94fe\u63a5gtest\ntarget_link_libraries(GTest::GTest INTERFACE gtest_main)\n\n\n# \u5c06\u6211\u4eec\u5199\u7684tests\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(multiply_test multiply_test.cpp)\n\n# \u628aGTest\u548c\u88ab\u6d4b\u51fd\u6570\u90fd\u94fe\u63a5\u5230 \u53ef\u6267\u884c\u6587\u4ef6 \u4e0a\ntarget_link_libraries(multiply_test\n PRIVATE\n  GTest::GTest\n  multiply)\n\n# \u589e\u52a0\u6d4b\u8bd5\nadd_test(multiply_gtests multiply_test)\n")),(0,s.kt)("h3",{id:"\u6784\u5efa\u8fd0\u884cctest"},"\u6784\u5efa\u8fd0\u884cctest"),(0,s.kt)("p",null,"\u50cf\u6784\u5efa\u8fd0\u884c\u6b63\u5e38\u7a0b\u5e8f\u90a3\u6837\u6784\u5efa\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u7a0b\u5e8f\u3002"),(0,s.kt)("p",null,"\uff08\u6211\u7684\u73af\u5883\u662fwin10 + VS2022\uff09"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"}," cmake -B build\n cmake --build build --config=Release\n")),(0,s.kt)("p",null,"\u7136\u540e\u8fd0\u884cctest\uff08\u6ce8\u610f: \u5fc5\u987b\u5148\u8fdb\u5165build\u6587\u4ef6\u5939\u624d\u884c\uff01\uff09"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"ctest\n")),(0,s.kt)("p",null,"\u6216\u8005\u4f60\u53ef\u4ee5\u52a0\u4e0a",(0,s.kt)("inlineCode",{parentName:"p"},"--verbose"),"\uff0c\u8fd9\u6837\u6253\u5370\u7684\u4fe1\u606f\u66f4\u5168\u9762\u3002"),(0,s.kt)("p",null,"\u8f93\u51fa\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-powershell"},"PS E:\\Dev\\zenoPBD\\build> ctest --verbose\nUpdateCTestConfiguration  from :E:/Dev/zenoPBD/build/DartConfiguration.tcl\nUpdateCTestConfiguration  from :E:/Dev/zenoPBD/build/DartConfiguration.tcl\nTest project E:/Dev/zenoPBD/build\nConstructing a list of tests\nDone constructing a list of tests\nUpdating test list for fixtures\nAdded 0 tests to meet fixture requirements\nChecking test dependency graph...\nChecking test dependency graph end\ntest 1\n    Start 1: multiply_gtests\n\n1: Test command: E:\\Dev\\zenoPBD\\build\\tests\\Release\\multiply_test.exe\n1: Test timeout computed to be: 10000000\n1: [==========] Running 3 tests from 1 test suite.\n1: [----------] Global test environment set-up.\n1: [----------] 3 tests from MultiplyTests\n1: [ RUN      ] MultiplyTests.TestIntegerOne_One\n1: [       OK ] MultiplyTests.TestIntegerOne_One (0 ms)\n1: [ RUN      ] MultiplyTests.TestIntegerZero_Zero\n1: [       OK ] MultiplyTests.TestIntegerZero_Zero (0 ms)\n1: [ RUN      ] MultiplyTests.TestIntegerZero_One\n1: [       OK ] MultiplyTests.TestIntegerZero_One (0 ms)\n1: [----------] 3 tests from MultiplyTests (0 ms total)\n1:\n1: [----------] Global test environment tear-down\n1: [==========] 3 tests from 1 test suite ran. (0 ms total)\n1: [  PASSED  ] 3 tests.\n1/1 Test #1: multiply_gtests ..................   Passed    0.04 sec\n\n100% tests passed, 0 tests failed out of 1\n\nTotal Test time (real) =   0.05 sec\n")))}c.isMDXComponent=!0}}]);